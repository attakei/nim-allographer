I, [2020-01-12T14:10:24] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:24] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:24] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:24] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:24] -- test_query: SELECT * FROM aaaa[]
I, [2020-01-12T14:10:25] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:25] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:25] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:25] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:25] -- test_query: SELECT * FROM users[]
I, [2020-01-12T14:10:25] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:25] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:25] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:25] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:26] -- test_query: SELECT * FROM users WHERE name = ? LIMIT 1["user1"]
I, [2020-01-12T14:10:26] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:26] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:26] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:26] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:26] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:10:26] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:27] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:27] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:27] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:27] -- test_query: SELECT name, email FROM users[]
I, [2020-01-12T14:10:27] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:27] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:27] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:28] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:28] -- test_query: SELECT name as user_name, email FROM users[]
I, [2020-01-12T14:10:28] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:28] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:28] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:28] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:28] -- test_query: SELECT * FROM users WHERE auth_id = ?["1"]
I, [2020-01-12T14:10:29] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:29] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:29] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:29] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:29] -- test_query: SELECT * FROM users WHERE auth_id = ? OR name = ?["1", "user2"]
I, [2020-01-12T14:10:29] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:30] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:30] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:30] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:30] -- test_query: UPDATE users SET name = ? WHERE id = ?["John", "2"]
I, [2020-01-12T14:10:30] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["2"]
I, [2020-01-12T14:10:30] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:30] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:30] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:31] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:31] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:10:31] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:10:31] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:31] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:31] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:31] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:31] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:10:32] -- test_query: INSERT INTO users (email) VALUES (?)["Paul@gmail.com"]
I, [2020-01-12T14:10:32] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:10:32] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["12"]
I, [2020-01-12T14:10:32] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:32] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:32] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:32] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:33] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:33] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:33] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:33] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:33] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id BETWEEN 6.0 AND 9.0["1"]
I, [2020-01-12T14:10:33] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:34] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:34] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:34] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:34] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id NOT BETWEEN 1.0 AND 4.0["1"]
I, [2020-01-12T14:10:34] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:34] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:34] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:34] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:35] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id IN (5, 6, 7)[]
I, [2020-01-12T14:10:35] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:35] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:35] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:35] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:35] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id NOT IN (5, 6, 7)[]
I, [2020-01-12T14:10:35] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:36] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:36] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:36] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:36] -- test_query: INSERT INTO users (email) VALUES (?)["user11@gmail.com"]
I, [2020-01-12T14:10:36] -- test_query: SELECT id, name, email FROM users WHERE name is null[]
I, [2020-01-12T14:10:36] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:36] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:37] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:37] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:37] -- test_query: SELECT max(id) FROM users GROUP BY auth_id[]
I, [2020-01-12T14:10:37] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:37] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:37] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:37] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:37] -- test_query: SELECT id, name FROM users GROUP BY auth_id, id HAVING auth_id = ?["1"]
I, [2020-01-12T14:10:38] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:38] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:38] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:38] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:38] -- test_query: SELECT * FROM users ORDER BY auth_id ASC, id DESC[]
I, [2020-01-12T14:10:38] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:38] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:39] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:39] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:39] -- test_query: SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2"]
I, [2020-01-12T14:10:39] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:10:39] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:10:39] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:10:39] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:10:40] -- test_query: INSERT INTO users (name) VALUES (?)["user11"]
I, [2020-01-12T14:10:40] -- test_query: SELECT users.id, users.name, users.auth_id FROM users LEFT JOIN auth ON auth.id = users.auth_id ORDER BY users.id DESC[]
I, [2020-01-12T14:18:03] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:04] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:04] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:04] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:04] -- test_query: SELECT * FROM aaaa[]
I, [2020-01-12T14:18:04] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:04] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:04] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:04] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:05] -- test_query: SELECT * FROM users[]
I, [2020-01-12T14:18:05] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:05] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:05] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:05] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:05] -- test_query: SELECT * FROM users WHERE name = ? LIMIT 1["user1"]
I, [2020-01-12T14:18:06] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:06] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:06] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:06] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:06] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:18:06] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:06] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:06] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:07] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:07] -- test_query: SELECT name, email FROM users[]
I, [2020-01-12T14:18:07] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:07] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:07] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:07] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:07] -- test_query: SELECT name as user_name, email FROM users[]
I, [2020-01-12T14:18:08] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:08] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:08] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:08] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:08] -- test_query: SELECT * FROM users WHERE auth_id = ?["1"]
I, [2020-01-12T14:18:08] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:08] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:08] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:09] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:09] -- test_query: SELECT * FROM users WHERE auth_id = ? OR name = ?["1", "user2"]
I, [2020-01-12T14:18:09] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:09] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:09] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:09] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:10] -- test_query: UPDATE users SET name = ? WHERE id = ?["John", "2"]
I, [2020-01-12T14:18:10] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["2"]
I, [2020-01-12T14:18:10] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:10] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:10] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:10] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:10] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:18:11] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:18:11] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:11] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:11] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:11] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:11] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:18:11] -- test_query: INSERT INTO users (email) VALUES (?)["Paul@gmail.com"]
I, [2020-01-12T14:18:12] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:18:12] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["12"]
I, [2020-01-12T14:18:12] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:12] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:12] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:12] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:13] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:13] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:13] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:13] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:13] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id BETWEEN 6.0 AND 9.0["1"]
I, [2020-01-12T14:18:13] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:13] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:14] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:14] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:14] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id NOT BETWEEN 1.0 AND 4.0["1"]
I, [2020-01-12T14:18:14] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:14] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:14] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:14] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:14] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id IN (5, 6, 7)[]
I, [2020-01-12T14:18:15] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:15] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:15] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:15] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:15] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id NOT IN (5, 6, 7)[]
I, [2020-01-12T14:18:15] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:15] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:16] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:16] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:16] -- test_query: INSERT INTO users (email) VALUES (?)["user11@gmail.com"]
I, [2020-01-12T14:18:16] -- test_query: SELECT id, name, email FROM users WHERE name is null[]
I, [2020-01-12T14:18:16] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:16] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:16] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:16] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:17] -- test_query: SELECT max(id) FROM users GROUP BY auth_id[]
I, [2020-01-12T14:18:17] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:17] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:17] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:17] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:17] -- test_query: SELECT id, name FROM users GROUP BY auth_id, id HAVING auth_id = ?["1"]
I, [2020-01-12T14:18:18] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:18] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:18] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:18] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:18] -- test_query: SELECT * FROM users ORDER BY auth_id ASC, id DESC[]
I, [2020-01-12T14:18:19] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:19] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:19] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:19] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:19] -- test_query: SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2"]
I, [2020-01-12T14:18:20] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:20] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:20] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:20] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:18:20] -- test_query: INSERT INTO users (name) VALUES (?)["user11"]
I, [2020-01-12T14:18:20] -- test_query: SELECT users.id, users.name, users.auth_id FROM users LEFT JOIN auth ON auth.id = users.auth_id ORDER BY users.id DESC[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'birth_date' DATE, 'null' VARCHAR CHECK (length('null') <= 255), 'bool' TINYINT DEFAULT false NOT NULL)[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: INSERT INTO users (name, birth_date) VALUES (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?)["user1", "1990-01-01", "user2", "1990-01-02", "user3", "1990-01-03", "user4", "1990-01-04", "user5", "1990-01-05", "user6", "1990-01-06", "user7", "1990-01-07", "user8", "1990-01-08", "user9", "1990-01-09", "user10", "1990-01-10"]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT max(name) as aggregate FROM users[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT max(id) as aggregate FROM users[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT min(name) as aggregate FROM users[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT min(id) as aggregate FROM users[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT avg(id) as aggregate FROM users[]
I, [2020-01-12T14:18:24] -- test_query_aggregates: SELECT sum(id) as aggregate FROM users[]
I, [2020-01-12T14:18:28] -- test_query_paginate: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:28] -- test_query_paginate: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:28] -- test_query_paginate: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:28] -- test_query_paginate: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2", "user11", "user11@gmail.com", "1", "user12", "user12@gmail.com", "2", "user13", "user13@gmail.com", "1", "user14", "user14@gmail.com", "2", "user15", "user15@gmail.com", "1", "user16", "user16@gmail.com", "2", "user17", "user17@gmail.com", "1", "user18", "user18@gmail.com", "2", "user19", "user19@gmail.com", "1", "user20", "user20@gmail.com", "2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: DELETE FROM users WHERE id = ?["2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 6[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 0[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users ORDER BY id ASC LIMIT 4[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT id, name FROM users ORDER BY id DESC LIMIT 4[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id < 5 ORDER BY id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id >= 5 ORDER BY id ASC LIMIT 4
) x
[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id > 5 ORDER BY id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id <= 5 ORDER BY id DESC LIMIT 4
) x
[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id > 5 ORDER BY id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id <= 5 ORDER BY id DESC LIMIT 4
) x
[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id < 5 ORDER BY id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id >= 5 ORDER BY id ASC LIMIT 4
) x
[]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT users.id, users.name, users.auth_id FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? ORDER BY users.id ASC LIMIT 4["2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? ORDER BY users.id ASC LIMIT 4["2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id < 10 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id >= 10 ORDER BY users.id ASC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id < 10 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id >= 10 ORDER BY users.id ASC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id > 8 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id <= 8 ORDER BY users.id DESC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["4"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["5"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["2", "2"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["4", "4"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["5", "5"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["20", "20"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["19", "19"]
I, [2020-01-12T14:18:29] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["18", "18"]
I, [2020-01-12T14:18:33] -- test_query_return_type: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'birth_date' DATE, 'null' VARCHAR CHECK (length('null') <= 255), 'bool' TINYINT DEFAULT false NOT NULL)[]
I, [2020-01-12T14:18:33] -- test_query_return_type: INSERT INTO users (name, birth_date) VALUES (?, ?), (?, ?), (?, ?), (?, ?), (?, ?)["user1", "1990-01-01", "user2", "1990-01-02", "user3", "1990-01-03", "user4", "1990-01-04", "user5", "1990-01-05"]
I, [2020-01-12T14:18:33] -- test_query_return_type: SELECT * FROM users[]
I, [2020-01-12T14:18:33] -- test_query_return_type: select * from users[]
I, [2020-01-12T14:18:33] -- test_query_return_type: SELECT * FROM users LIMIT 1[]
I, [2020-01-12T14:18:33] -- test_query_return_type: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:18:33] -- test_query_return_type: DROP TABLE users[]
I, [2020-01-12T14:18:43] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:43] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:43] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:43] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:18:43] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:18:43] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' AND \'A\' = \'A"]
I, [2020-01-12T14:18:44] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:44] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:44] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:44] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:18:44] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:18:44] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' AND \'A\' = \'B"]
I, [2020-01-12T14:18:44] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:44] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:44] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:45] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:18:45] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:18:45] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' OR \'A\' = \'B"]
I, [2020-01-12T14:18:45] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:45] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:45] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:45] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:18:45] -- test_sql_injection: SELECT * FROM users WHERE id = ?["1"]
I, [2020-01-12T14:18:45] -- test_sql_injection: SELECT * FROM users WHERE id = ?["2-1"]
I, [2020-01-12T14:18:46] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:18:46] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:18:46] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:18:46] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:18:46] -- test_sql_injection: SELECT name, email FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["1"]
I, [2020-01-12T14:18:46] -- test_sql_injection: SELECT name, email FROM users JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2-1"]
I, [2020-01-12T14:55:19] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:19] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:19] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:19] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:19] -- test_query: SELECT * FROM users[]
I, [2020-01-12T14:55:20] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:20] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:20] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:20] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:20] -- test_query: SELECT * FROM users WHERE name = ? LIMIT 1["user1"]
I, [2020-01-12T14:55:20] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:21] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:21] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:21] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:21] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:55:21] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:21] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:21] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:21] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:21] -- test_query: SELECT name, email FROM users[]
I, [2020-01-12T14:55:22] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:22] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:22] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:22] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:22] -- test_query: SELECT name as user_name, email FROM users[]
I, [2020-01-12T14:55:22] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:22] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:22] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:22] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:23] -- test_query: SELECT * FROM users WHERE auth_id = ?["1"]
I, [2020-01-12T14:55:23] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:23] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:23] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:23] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:23] -- test_query: SELECT * FROM users WHERE auth_id = ? OR name = ?["1", "user2"]
I, [2020-01-12T14:55:23] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:23] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:24] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:24] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:24] -- test_query: UPDATE users SET name = ? WHERE id = ?["John", "2"]
I, [2020-01-12T14:55:24] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["2"]
I, [2020-01-12T14:55:24] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:24] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:24] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:24] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:24] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:55:24] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:55:25] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:25] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:25] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:25] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:25] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:55:25] -- test_query: INSERT INTO users (email) VALUES (?)["Paul@gmail.com"]
I, [2020-01-12T14:55:25] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:55:25] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["12"]
I, [2020-01-12T14:55:25] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:26] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:26] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:26] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:26] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:26] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:26] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:26] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:27] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id BETWEEN 6.0 AND 9.0["1"]
I, [2020-01-12T14:55:27] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:27] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:27] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:27] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:27] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id NOT BETWEEN 1.0 AND 4.0["1"]
I, [2020-01-12T14:55:27] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:27] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:27] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:28] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:28] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id IN (5, 6, 7)[]
I, [2020-01-12T14:55:28] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:28] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:28] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:28] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:28] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id NOT IN (5, 6, 7)[]
I, [2020-01-12T14:55:28] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:29] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:29] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:29] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:29] -- test_query: INSERT INTO users (email) VALUES (?)["user11@gmail.com"]
I, [2020-01-12T14:55:29] -- test_query: SELECT id, name, email FROM users WHERE name is null[]
I, [2020-01-12T14:55:29] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:29] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:29] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:29] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:30] -- test_query: SELECT max(id) FROM users GROUP BY auth_id[]
I, [2020-01-12T14:55:30] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:30] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:30] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:30] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:30] -- test_query: SELECT id, name FROM users GROUP BY auth_id, id HAVING auth_id = ?["1"]
I, [2020-01-12T14:55:31] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:31] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:31] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:31] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:31] -- test_query: SELECT * FROM users ORDER BY auth_id ASC, id DESC[]
I, [2020-01-12T14:55:31] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:31] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:31] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:31] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:31] -- test_query: SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2"]
I, [2020-01-12T14:55:32] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:32] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:32] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:32] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:55:32] -- test_query: INSERT INTO users (name) VALUES (?)["user11"]
I, [2020-01-12T14:55:32] -- test_query: SELECT users.id, users.name, users.auth_id FROM users LEFT JOIN auth ON auth.id = users.auth_id ORDER BY users.id DESC[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'birth_date' DATE, 'null' VARCHAR CHECK (length('null') <= 255), 'bool' TINYINT DEFAULT false NOT NULL)[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: INSERT INTO users (name, birth_date) VALUES (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?)["user1", "1990-01-01", "user2", "1990-01-02", "user3", "1990-01-03", "user4", "1990-01-04", "user5", "1990-01-05", "user6", "1990-01-06", "user7", "1990-01-07", "user8", "1990-01-08", "user9", "1990-01-09", "user10", "1990-01-10"]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT max(name) as aggregate FROM users[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT max(id) as aggregate FROM users[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT min(name) as aggregate FROM users[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT min(id) as aggregate FROM users[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT avg(id) as aggregate FROM users[]
I, [2020-01-12T14:55:36] -- test_query_aggregates: SELECT sum(id) as aggregate FROM users[]
I, [2020-01-12T14:55:39] -- test_query_paginate: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:39] -- test_query_paginate: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:40] -- test_query_paginate: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:40] -- test_query_paginate: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2", "user11", "user11@gmail.com", "1", "user12", "user12@gmail.com", "2", "user13", "user13@gmail.com", "1", "user14", "user14@gmail.com", "2", "user15", "user15@gmail.com", "1", "user16", "user16@gmail.com", "2", "user17", "user17@gmail.com", "1", "user18", "user18@gmail.com", "2", "user19", "user19@gmail.com", "1", "user20", "user20@gmail.com", "2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: DELETE FROM users WHERE id = ?["2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 6[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 0[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users ORDER BY id ASC LIMIT 4[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT id, name FROM users ORDER BY id DESC LIMIT 4[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id < 5 ORDER BY id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id >= 5 ORDER BY id ASC LIMIT 4
) x
[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id > 5 ORDER BY id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id <= 5 ORDER BY id DESC LIMIT 4
) x
[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id > 5 ORDER BY id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id <= 5 ORDER BY id DESC LIMIT 4
) x
[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id < 5 ORDER BY id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id >= 5 ORDER BY id ASC LIMIT 4
) x
[]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT users.id, users.name, users.auth_id FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? ORDER BY users.id ASC LIMIT 4["2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? ORDER BY users.id ASC LIMIT 4["2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id < 10 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id >= 10 ORDER BY users.id ASC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id < 10 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id >= 10 ORDER BY users.id ASC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id > 8 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id <= 8 ORDER BY users.id DESC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["4"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["5"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["2", "2"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["4", "4"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["5", "5"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["20", "20"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["19", "19"]
I, [2020-01-12T14:55:40] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["18", "18"]
I, [2020-01-12T14:55:43] -- test_query_return_type: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'birth_date' DATE, 'null' VARCHAR CHECK (length('null') <= 255), 'bool' TINYINT DEFAULT false NOT NULL)[]
I, [2020-01-12T14:55:43] -- test_query_return_type: INSERT INTO users (name, birth_date) VALUES (?, ?), (?, ?), (?, ?), (?, ?), (?, ?)["user1", "1990-01-01", "user2", "1990-01-02", "user3", "1990-01-03", "user4", "1990-01-04", "user5", "1990-01-05"]
I, [2020-01-12T14:55:44] -- test_query_return_type: SELECT * FROM users[]
I, [2020-01-12T14:55:44] -- test_query_return_type: select * from users[]
I, [2020-01-12T14:55:44] -- test_query_return_type: SELECT * FROM users LIMIT 1[]
I, [2020-01-12T14:55:44] -- test_query_return_type: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:55:44] -- test_query_return_type: DROP TABLE users[]
I, [2020-01-12T14:55:54] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:54] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:54] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:54] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:55:55] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:55:55] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' AND \'A\' = \'A"]
I, [2020-01-12T14:55:55] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:55] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:55] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:55] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:55:55] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:55:55] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' AND \'A\' = \'B"]
I, [2020-01-12T14:55:56] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:56] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:56] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:56] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:55:56] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:55:56] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' OR \'A\' = \'B"]
I, [2020-01-12T14:55:56] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:56] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:57] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:57] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:55:57] -- test_sql_injection: SELECT * FROM users WHERE id = ?["1"]
I, [2020-01-12T14:55:57] -- test_sql_injection: SELECT * FROM users WHERE id = ?["2-1"]
I, [2020-01-12T14:55:57] -- test_sql_injection: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-12T14:55:57] -- test_sql_injection: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'password' VARCHAR CHECK (length('password') <= 255), 'salt' VARCHAR CHECK (length('salt') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'birth_date' DATE, 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:55:57] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:55:57] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:55:57] -- test_sql_injection: SELECT name, email FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["1"]
I, [2020-01-12T14:55:57] -- test_sql_injection: SELECT name, email FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2-1"]
I, [2020-01-12T14:56:46] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:46] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:46] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:46] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:46] -- test_query: SELECT * FROM users[]
I, [2020-01-12T14:56:47] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:47] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:47] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:47] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:47] -- test_query: SELECT * FROM users WHERE name = ? LIMIT 1["user1"]
I, [2020-01-12T14:56:47] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:47] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:47] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:47] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:47] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:56:47] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:48] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:48] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:48] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:48] -- test_query: SELECT name, email FROM users[]
I, [2020-01-12T14:56:48] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:48] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:48] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:48] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:48] -- test_query: SELECT name as user_name, email FROM users[]
I, [2020-01-12T14:56:48] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:49] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:49] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:49] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:49] -- test_query: SELECT * FROM users WHERE auth_id = ?["1"]
I, [2020-01-12T14:56:49] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:49] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:49] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:49] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:49] -- test_query: SELECT * FROM users WHERE auth_id = ? OR name = ?["1", "user2"]
I, [2020-01-12T14:56:49] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:49] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:49] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:50] -- test_query: UPDATE users SET name = ? WHERE id = ?["John", "2"]
I, [2020-01-12T14:56:50] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["2"]
I, [2020-01-12T14:56:50] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:50] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:56:50] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:56:50] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:50] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO users (name) VALUES (?)["John"]
I, [2020-01-12T14:56:50] -- test_query: INSERT INTO users (email) VALUES (?)["Paul@gmail.com"]
I, [2020-01-12T14:56:50] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["11"]
I, [2020-01-12T14:56:50] -- test_query: SELECT * FROM users WHERE id = ? LIMIT 1["12"]
I, [2020-01-12T14:56:51] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:51] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:51] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:51] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:51] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:52] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:52] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:52] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:52] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id BETWEEN 6.0 AND 9.0["1"]
I, [2020-01-12T14:56:52] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:52] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:52] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:52] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:52] -- test_query: SELECT id, name FROM users WHERE auth_id = ? AND id NOT BETWEEN 1.0 AND 4.0["1"]
I, [2020-01-12T14:56:52] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:52] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:52] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:52] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:52] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id IN (5, 6, 7)[]
I, [2020-01-12T14:56:53] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:53] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:53] -- test_query: SELECT id, name FROM users WHERE id BETWEEN 4.0 AND 10.0 AND id NOT IN (5, 6, 7)[]
I, [2020-01-12T14:56:53] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:53] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO users (email) VALUES (?)["user11@gmail.com"]
I, [2020-01-12T14:56:53] -- test_query: SELECT id, name, email FROM users WHERE name is null[]
I, [2020-01-12T14:56:53] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:53] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:53] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:54] -- test_query: SELECT max(id) FROM users GROUP BY auth_id[]
I, [2020-01-12T14:56:54] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:54] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:54] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:54] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:54] -- test_query: SELECT id, name FROM users GROUP BY auth_id, id HAVING auth_id = ?["1"]
I, [2020-01-12T14:56:54] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:54] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:54] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:54] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:54] -- test_query: SELECT * FROM users ORDER BY auth_id ASC, id DESC[]
I, [2020-01-12T14:56:54] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:54] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:55] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:55] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:55] -- test_query: SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2"]
I, [2020-01-12T14:56:55] -- test_query: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:56:55] -- test_query: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:56:55] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:56:55] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-12T14:56:55] -- test_query: INSERT INTO users (name) VALUES (?)["user11"]
I, [2020-01-12T14:56:55] -- test_query: SELECT users.id, users.name, users.auth_id FROM users LEFT JOIN auth ON auth.id = users.auth_id ORDER BY users.id DESC[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "birth_date" DATE, "null" VARCHAR(255), "bool" BOOLEAN DEFAULT false NOT NULL)[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: INSERT INTO users (name, birth_date) VALUES (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?), (?, ?)["user1", "1990-01-01", "user2", "1990-01-02", "user3", "1990-01-03", "user4", "1990-01-04", "user5", "1990-01-05", "user6", "1990-01-06", "user7", "1990-01-07", "user8", "1990-01-08", "user9", "1990-01-09", "user10", "1990-01-10"]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT max(name) as aggregate FROM users[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT max(id) as aggregate FROM users[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT min(name) as aggregate FROM users[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT min(id) as aggregate FROM users[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT avg(id) as aggregate FROM users[]
I, [2020-01-12T14:56:59] -- test_query_aggregates: SELECT sum(id) as aggregate FROM users[]
I, [2020-01-12T14:57:03] -- test_query_paginate: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:57:04] -- test_query_paginate: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "address" VARCHAR(255), "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:57:04] -- test_query_paginate: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:57:04] -- test_query_paginate: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2", "user11", "user11@gmail.com", "1", "user12", "user12@gmail.com", "2", "user13", "user13@gmail.com", "1", "user14", "user14@gmail.com", "2", "user15", "user15@gmail.com", "1", "user16", "user16@gmail.com", "2", "user17", "user17@gmail.com", "1", "user18", "user18@gmail.com", "2", "user19", "user19@gmail.com", "1", "user20", "user20@gmail.com", "2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: DELETE FROM users WHERE id = ?["2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 6[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 0[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT count(*) as aggregate FROM users[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users LIMIT 3 OFFSET 3[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users ORDER BY id ASC LIMIT 4[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT id, name FROM users ORDER BY id DESC LIMIT 4[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id < 5 ORDER BY id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id >= 5 ORDER BY id ASC LIMIT 4
) x
[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id > 5 ORDER BY id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id <= 5 ORDER BY id DESC LIMIT 4
) x
[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id > 5 ORDER BY id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id <= 5 ORDER BY id DESC LIMIT 4
) x
[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT id, name FROM users WHERE id < 5 ORDER BY id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT id, name FROM users WHERE id >= 5 ORDER BY id ASC LIMIT 4
) x
[]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT users.id, users.name, users.auth_id FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? ORDER BY users.id ASC LIMIT 4["2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? ORDER BY users.id ASC LIMIT 4["2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id < 10 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id >= 10 ORDER BY users.id ASC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id < 10 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id >= 10 ORDER BY users.id ASC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id > 8 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ? AND users.id <= 8 ORDER BY users.id DESC LIMIT 4
) x
["2", "2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["4"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT users.id, users.name FROM users WHERE id < ? ORDER BY users.id ASC LIMIT 3["5"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["2", "2"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["4", "4"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id < 1 ORDER BY users.id DESC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id < ? AND users.id >= 1 ORDER BY users.id ASC LIMIT 3
) x
["5", "5"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["20", "20"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["19", "19"]
I, [2020-01-12T14:57:04] -- test_query_paginate: SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id > 20 ORDER BY users.id ASC LIMIT 1
) x
UNION ALL
SELECT * FROM (
  SELECT users.id, users.name FROM users WHERE id >= ? AND users.id <= 20 ORDER BY users.id DESC LIMIT 3
) x
["18", "18"]
I, [2020-01-12T14:57:08] -- test_query_return_type: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "birth_date" DATE, "null" VARCHAR(255), "bool" BOOLEAN DEFAULT false NOT NULL)[]
I, [2020-01-12T14:57:09] -- test_query_return_type: INSERT INTO users (name, birth_date) VALUES (?, ?), (?, ?), (?, ?), (?, ?), (?, ?)["user1", "1990-01-01", "user2", "1990-01-02", "user3", "1990-01-03", "user4", "1990-01-04", "user5", "1990-01-05"]
I, [2020-01-12T14:57:09] -- test_query_return_type: SELECT * FROM users[]
I, [2020-01-12T14:57:09] -- test_query_return_type: select * from users[]
I, [2020-01-12T14:57:09] -- test_query_return_type: SELECT * FROM users LIMIT 1[]
I, [2020-01-12T14:57:09] -- test_query_return_type: SELECT * FROM users WHERE id = ? LIMIT 1["1"]
I, [2020-01-12T14:57:09] -- test_query_return_type: DROP TABLE users[]
I, [2020-01-12T14:57:20] -- test_sql_injection: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:57:20] -- test_sql_injection: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "password" VARCHAR(255), "salt" VARCHAR(255), "address" VARCHAR(255), "birth_date" DATE, "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:57:20] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:57:20] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:57:21] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:57:21] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' AND \'A\' = \'A"]
I, [2020-01-12T14:57:21] -- test_sql_injection: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:57:21] -- test_sql_injection: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "password" VARCHAR(255), "salt" VARCHAR(255), "address" VARCHAR(255), "birth_date" DATE, "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:57:21] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:57:21] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:57:21] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:57:21] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' AND \'A\' = \'B"]
I, [2020-01-12T14:57:21] -- test_sql_injection: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:57:21] -- test_sql_injection: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "password" VARCHAR(255), "salt" VARCHAR(255), "address" VARCHAR(255), "birth_date" DATE, "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:57:21] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:57:21] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:57:21] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1"]
I, [2020-01-12T14:57:21] -- test_sql_injection: SELECT * FROM users WHERE name = ?["user1\' OR \'A\' = \'B"]
I, [2020-01-12T14:57:22] -- test_sql_injection: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:57:22] -- test_sql_injection: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "password" VARCHAR(255), "salt" VARCHAR(255), "address" VARCHAR(255), "birth_date" DATE, "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:57:22] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:57:22] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:57:22] -- test_sql_injection: SELECT * FROM users WHERE id = ?["1"]
I, [2020-01-12T14:57:22] -- test_sql_injection: SELECT * FROM users WHERE id = ?["2-1"]
I, [2020-01-12T14:57:22] -- test_sql_injection: CREATE TABLE auth ("id" SERIAL NOT NULL PRIMARY KEY, "auth" VARCHAR(255) NOT NULL)[]
I, [2020-01-12T14:57:22] -- test_sql_injection: CREATE TABLE users ("id" SERIAL NOT NULL PRIMARY KEY, "name" VARCHAR(255), "email" VARCHAR(255), "password" VARCHAR(255), "salt" VARCHAR(255), "address" VARCHAR(255), "birth_date" DATE, "auth_id" INT, FOREIGN KEY("auth_id") REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-12T14:57:22] -- test_sql_injection: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-12T14:57:22] -- test_sql_injection: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "2", "user2", "user2@gmail.com", "1", "user3", "user3@gmail.com", "2", "user4", "user4@gmail.com", "1", "user5", "user5@gmail.com", "2", "user6", "user6@gmail.com", "1", "user7", "user7@gmail.com", "2", "user8", "user8@gmail.com", "1", "user9", "user9@gmail.com", "2", "user10", "user10@gmail.com", "1"]
I, [2020-01-12T14:57:22] -- test_sql_injection: SELECT name, email FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["1"]
I, [2020-01-12T14:57:22] -- test_sql_injection: SELECT name, email FROM users INNER JOIN auth ON auth.id = users.auth_id WHERE auth.id = ?["2-1"]
I, [2020-01-13T09:41:21] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-13T09:41:21] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-13T09:41:21] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-13T09:41:21] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-13T09:41:21] -- test_query: SELECT * FROM users[]
I, [2020-01-13T09:41:21] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-13T09:41:21] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
I, [2020-01-13T09:41:21] -- test_query: INSERT INTO auth (auth) VALUES (?), (?)["admin", "user"]
I, [2020-01-13T09:41:21] -- test_query: INSERT INTO users (name, email, auth_id) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?)["user1", "user1@gmail.com", "1", "user2", "user2@gmail.com", "2", "user3", "user3@gmail.com", "1", "user4", "user4@gmail.com", "2", "user5", "user5@gmail.com", "1", "user6", "user6@gmail.com", "2", "user7", "user7@gmail.com", "1", "user8", "user8@gmail.com", "2", "user9", "user9@gmail.com", "1", "user10", "user10@gmail.com", "2"]
I, [2020-01-13T09:41:22] -- test_query: SELECT * FROM users WHERE name = ? LIMIT 1["user1"]
I, [2020-01-13T09:41:22] -- test_query: CREATE TABLE "auth" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'auth' VARCHAR NOT NULL CHECK (length('auth') <= 255))[]
I, [2020-01-13T09:41:22] -- test_query: CREATE TABLE "users" ('id' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 'name' VARCHAR CHECK (length('name') <= 255), 'email' VARCHAR CHECK (length('email') <= 255), 'address' VARCHAR CHECK (length('address') <= 255), 'auth_id' INTEGER, FOREIGN KEY('auth_id') REFERENCES auth(id) ON DELETE SET NULL)[]
